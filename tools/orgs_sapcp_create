#!/bin/bash
#do_run=1 # Execute(evaluate) the commands
do_run=0 # Don't evaluate any commands
do_this=1
force=$2
if [ "$#" -eq 2 ]; then
  if [ $force == "-f" ]; then
    do_run=1
    echo ""
    echo "Forcing command execution"
    echo ""
  fi
fi

orgcnt=0
START="$(date +%s)"

while read orgspace
do

first=1
IFS=':'     # colon (:) is set as delimiter
read -ra ADDR <<< "$orgspace"   # str is read into an array as tokens separated by IFS
for i in "${ADDR[@]}"; do   # access each element of array
    #echo "$i"
    #echo $first
    if [ $first -eq 1 ]; then
	    first=0
	    org=$i
    else
	    first=1
	    space=$i
    fi
done
IFS=' '     # reset to default value after usage

#https://accounts-service.cfapps.eu10.hana.ondemand.com/api#/
#curl $accountsurl/accounts/v1/subaccounts --silent --location --insecure --request POST --header 'Content-Type: application/json' --header 'Accept: application/json' --header 'Authorization: Bearer '$bearer --data-raw '{"betaEnabled": true, "customProperties": [ { "key": "creator", "value": "primaryuser03" } ], "description": "Subaccount created via API", "displayName": "ViaAPI", "parentGUID": "'$globalacctguid'", "region": "us21", "subaccountAdmins": [ "andrew.lunde@sap.com" ], "subdomain": "viaapi", "usedForProductionSetting": "USED_FOR_PRODUCTION"}' | jq .


if [ $do_this -eq 1 ]; then 
echo "Creating SubAccount : $org "
lastsubguid=$(sapcp --format json create accounts/subaccount --global-account partner-eng --display-name PEAHCM --region us21 --subdomain partner-other --used-for-production NOT_USED_FOR_PRODUCTION --description "Azure subaccount" --beta-enabled | jq .guid | tr -ds '"' '')


echo "LastSubGUID = "$lastsubguid

if [ $do_run -eq 1 ]; then 
  state=INIT
  while [ $state != "OK" ] && [ $lastsubguid != "null" ]; do
    echo "State is "$state
    sleep 2
    state=$(sapcp --format json get accounts/subaccount $lastsubguid | jq .state | tr -ds '"' '')
  done
fi

#https://provisioning-service.cfapps.eu10.hana.ondemand.com/api#/

#https://accounts-service.cfapps.eu10.hana.ondemand.com/api#/
# sapcp create accounts/environment-instance --subaccount c96d49c7-bdbf-436c-a35a-322b90ba2793 --parameters '{"instance_name":"ypartner-sub1","users":[{"email":"andrew.lunde@sap.com"}]}' --display-name ypartner-sub1 --environment cloudfoundry --landscape cf-us21 --service cloudfoundry --plan standard
echo "Enabling CF in : $org "
#cmd='lastguid=$(curl $accountsurlcen/accounts/v1/subaccounts --silent --location --insecure --request POST --header '"'"'Content-Type: application/json'"'"' --header '"'"'Accept: application/json'"'"' --header '"'"'Authorization: Bearer '"'"'$bearercen --data-raw '"'"'{"betaEnabled": true, "customProperties": [ { "key": "creator", "value": "'$sapcpuser'" } ], "description": "Subaccount created via API", "displayName": "'$org'", "parentGUID": "'"'"'$globalacctguid'"'"'", "region": "us21", "subaccountAdmins": [ "andrew.lunde@sap.com" ], "subdomain": "viaapi'$orgcnt'", "usedForProductionSetting": "USED_FOR_PRODUCTION"}'"'"' | jq .guid | tr -ds '"'"'"'"'"' '"'"''"'"')'

cmd='lastenvguid=$(sapcp --format json create accounts/environment-instance --subaccount '$lastsubguid' --parameters '"'"'{"instance_name":"'$org'","users":[{"email":"andrew.lunde@sap.com"}]}'"'"' --display-name '$org' --environment cloudfoundry --landscape cf-us21 --service cloudfoundry --plan standard | jq .id | tr -ds '"'"'"'"'"' '"'"''"'"')'
echo $cmd
if [ $do_run -eq 1 ]; then eval $cmd; fi
echo ""

echo "LastEnvGUID = "$lastenvguid

if [ $do_run -eq 1 ]; then 
  status=INIT
  while [ $status != "Processed" ] && [ $lastenvguid != "null" ]; do
    echo "Status is "$status
    sleep 2
    status=$(sapcp --format json  get accounts/environment-instance $lastenvguid --subaccount $lastsubguid | jq .status | tr -ds '"' '')
  done
fi

# Now allocate application runtime and hana/schema quotas

sapcp --format json assign accounts/entitlement --global-account partner-eng --to-subaccount $lastsubguid --for-service hana --plan schema --enable

sapcp --format json assign accounts/entitlement --global-account partner-eng --to-subaccount $lastsubguid --for-service APPLICATION_RUNTIME --plan MEMORY --amount 1

cf target -o $org

sleep 1

cf create-space $space

sleep 1

cf target -s $space

sleep 1
fi

if [ $do_this -eq 1 ]; then 

cmd='lastorgguid=$(cf org '$org' --guid)'
echo $cmd
if [ $do_run -eq 1 ]; then eval $cmd; fi


cmd='lastspaceguid=$(cf space '$space' --guid)'
echo $cmd
if [ $do_run -eq 1 ]; then eval $cmd; fi

cf target -o partner-eng-hca -s prod

# Now go permit HANA in this space.

cmd='cf update-service pehcaza -c '"'"'{"operation":"adddatabasemapping", "orgid":"'$lastorgguid'", "spaceid":"'$lastspaceguid'"}'"'"''
echo $cmd
if [ $do_run -eq 1 ]; then eval $cmd; fi

echo "Giving the update a couple secs."
sleep 2

cmd='cf service pehcaza'
echo $cmd
if [ $do_run -eq 1 ]; then eval $cmd; fi

cmd='cf target -o '$org' -s '$space
echo $cmd
if [ $do_run -eq 1 ]; then eval $cmd; fi

echo Deploying into $org $space

cf deploy ../mta_archives/acc.mtar -f

fi

((orgcnt++))

done < $1

DURATION=$[ $(date +%s) - ${START} ]

echo $orgcnt orgs processed in ${DURATION} seconds = $(( ${DURATION} / $orgcnt )) secs/org